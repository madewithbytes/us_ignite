# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2016-09-22 04:13
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import geoposition.fields
import taggit.managers
import us_ignite.common.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0002_auto_20150616_2121'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ActionCluster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='action cluster name')),
                ('stage', models.IntegerField(choices=[(1, 'Idea Complete'), (2, 'Prototype Complete'), (3, 'In Development'), (4, 'Deployed'), (5, 'Commercialized')], default=1, help_text='Please select the option that best reflects your current progress')),
                ('website', models.URLField(blank=True, help_text='Please enter a URL starting with http or https', max_length=500)),
                ('image', models.ImageField(blank=True, help_text='E.g. logo, screenshot, application diagram, photo of demo. Image suggested size: 500x400px', max_length=500, upload_to=b'actionclusters')),
                ('summary', models.TextField(blank=True, help_text='One sentence (tweet-length) pitch/summary of the application')),
                ('impact_statement', models.TextField(blank=True, help_text='Who benefits and how in one paragraph or less')),
                ('assistance', models.TextField(blank=True, help_text='Are you looking for additional help for this project? (e.g. specific technical skills, subject matter experts, design help, partners for pilots, etc)')),
                ('team_name', models.CharField(blank=True, help_text='Organization/Company name of developers', max_length=255)),
                ('team_description', models.TextField(blank=True)),
                ('acknowledgments', models.TextField(blank=True, help_text='Is their anyone you want to acknowledge for supporting this application?')),
                ('notes', models.TextField(blank=True)),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True)),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True)),
                ('slug', us_ignite.common.fields.AutoUUIDField(blank=True, editable=False, unique=True)),
                ('status', models.IntegerField(choices=[(1, b'Published'), (2, b'Draft'), (3, b'Removed')], default=2)),
                ('is_featured', models.BooleanField(default=False)),
                ('features_other', models.CharField(blank=True, max_length=255)),
                ('needs_partner', models.BooleanField(default=False, verbose_name=b'Looking for a partner?')),
                ('awards', models.TextField(blank=True, help_text='Recognition or Awards')),
                ('position', geoposition.fields.GeopositionField(blank=True, editable=False, max_length=42)),
                ('is_homepage', models.BooleanField(default=False, help_text='If marked this element will be shown in the homepage.', verbose_name=b'Show in the homepage?')),
                ('is_approved', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ('-is_featured', '-created'),
            },
        ),
        migrations.CreateModel(
            name='ActionClusterMedia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255)),
                ('image', models.ImageField(blank=True, help_text=b'Image suggested size: 500x400px', max_length=500, upload_to=b'actionclusters')),
                ('url', models.URLField(blank=True, help_text='Please enter a URL starting with http or https', verbose_name='URL')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True)),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True)),
                ('actioncluster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='actionclusters.ActionCluster')),
            ],
            options={
                'ordering': ('created',),
            },
        ),
        migrations.CreateModel(
            name='ActionClusterMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_edit', models.BooleanField(default=False)),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True)),
                ('actioncluster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='actionclusters.ActionCluster')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ActionClusterURL',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255)),
                ('url', models.URLField(help_text='Please enter a URL starting with http or https', max_length=500, verbose_name='URL')),
                ('actioncluster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='actionclusters.ActionCluster')),
            ],
        ),
        migrations.CreateModel(
            name='Community',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('community', models.CharField(max_length=255)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from=b'community', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from=b'name', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from=b'name', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Year',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(max_length=4, unique=True)),
                ('default_year', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True, default=b'')),
            ],
        ),
        migrations.AddField(
            model_name='actioncluster',
            name='community',
            field=models.ForeignKey(blank=True, help_text=b'What is the name of the city/community?', null=True, on_delete=django.db.models.deletion.CASCADE, to='actionclusters.Community'),
        ),
        migrations.AddField(
            model_name='actioncluster',
            name='domain',
            field=models.ForeignKey(blank=True, help_text=b'What is the primary public benefit priority area served by this action cluster?', null=True, on_delete=django.db.models.deletion.CASCADE, to='actionclusters.Domain'),
        ),
        migrations.AddField(
            model_name='actioncluster',
            name='features',
            field=models.ManyToManyField(blank=True, help_text=b'Check all that apply', to='actionclusters.Feature'),
        ),
        migrations.AddField(
            model_name='actioncluster',
            name='members',
            field=models.ManyToManyField(related_name='membership_set_for_actioncluster', through='actionclusters.ActionClusterMembership', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='actioncluster',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ownership_set_for_actioncluster', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='actioncluster',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='actioncluster',
            name='year',
            field=models.ForeignKey(blank=True, help_text=b'What year does this action cluster belong to?', null=True, on_delete=django.db.models.deletion.CASCADE, to='actionclusters.Year'),
        ),
        migrations.AlterUniqueTogether(
            name='actionclustermembership',
            unique_together=set([('user', 'actioncluster')]),
        ),
    ]
