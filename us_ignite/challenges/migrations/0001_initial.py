# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2016-09-22 04:13
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('apps', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Challenge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from=b'name', unique=True)),
                ('status', models.IntegerField(choices=[(1, b'Published'), (2, b'Draft'), (3, b'Removed')], default=2)),
                ('start_datetime', models.DateTimeField(help_text='Start date in US/Eastern timezone.')),
                ('end_datetime', models.DateTimeField(help_text='End date in US/Eastern timezone.')),
                ('url', models.URLField(blank=True, help_text='Please enter a URL starting with http or https', verbose_name='URL')),
                ('is_external', models.BooleanField(default=False, help_text='Determines if the challenge is to be held in a different Site.')),
                ('summary', models.TextField()),
                ('description', models.TextField()),
                ('event_dates', models.TextField(blank=True, help_text='Important event dates.')),
                ('acknowledgments', models.TextField(blank=True, help_text='Partners/Sponsors/Acknowledgements')),
                ('image', models.ImageField(blank=True, help_text=b'Image suggested size: 500x400px', upload_to=b'challenge')),
                ('hide_entries', models.BooleanField(default=False, help_text='When active entries are published only after the Challenge has finished.')),
                ('notes', models.TextField(blank=True)),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True)),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Entry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(choices=[(2, b'Draft'), (1, b'Submitted'), (3, b'Removed')], default=2)),
                ('notes', models.TextField(blank=True)),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True)),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apps.Application')),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='challenges.Challenge')),
            ],
            options={
                'verbose_name_plural': 'entries',
            },
        ),
        migrations.CreateModel(
            name='EntryAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.TextField(blank=True)),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True)),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True)),
                ('entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='challenges.Entry')),
            ],
            options={
                'ordering': ('question__order',),
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('is_required', models.BooleanField(default=True)),
                ('order', models.IntegerField(default=0)),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True)),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True)),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='challenges.Challenge')),
            ],
            options={
                'ordering': ('order',),
            },
        ),
        migrations.AddField(
            model_name='entryanswer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='challenges.Question'),
        ),
    ]
